#!/bin/env sh

cpu() {
  cpu="$(grep -o "^[^ ]*" /proc/loadavg)"
}

memory() {
  memory="$(free -h | sed -n "2s/\([^ ]* *\)\{2\}\([^ ]*\).*/\2/p")"
}

disk() {
  disk="$(df -h / | awk 'NR==2{print $4}')"
}

datetime() {
  current_date=$(date "+%m/%d/%Y")
  local_time=$(date "+%I:%M%P")
  # edt_time=$(TZ="America/New_York" date "+%I:%M%P")
  # cdt_time=$(TZ="America/Chicago" date "+%I:%M%P")
  # cest_time=$(TZ="Europe/Berlin" date "+%I:%M%P")
  # datetime="$current_date $local_time EST $edt_time CDT $cdt_time CEST $cest_time"

  datetime="$current_date $local_time"
}

bat() {
  [ ! -d /sys/class/power_supply/BAT0 ] && bat="N/A" && return

  read -r bat_status </sys/class/power_supply/BAT0/status
  read -r bat_capacity </sys/class/power_supply/BAT0/capacity

  case "$bat_status" in
    "Charging")    symbol="+" ;;
    "Discharging") symbol="-" ;;
    *)             symbol="=" ;;
  esac

  bat="$symbol $bat_capacity%"
}

vol() {
  vol="$([ "$(pamixer --get-mute)" = "false" ] && printf "%s%%" "$(pamixer --get-volume)" || printf 'Muted')"
}

vpn() {
  if ip link show tun0 2>/dev/null | grep -q "state UP"; then
    vpn=" VPN"
  elif ip link show wg0 2>/dev/null | grep -q "state UP"; then
    vpn=" VPN"
  elif ip link show redhat0 2>/dev/null | grep -q "state UNKNOWN"; then
    vpn=" VPN"
  else
    vpn=""
  fi
}

display() {
  echo "[ $memory] [ $cpu] [ $disk] [ $vol] [ $datetime] [ $bat]${vpn:+ [$vpn]}" >"$FIFO"
}

printf "%s" "$$" >"$XDG_RUNTIME_DIR/status_pid"
FIFO="$XDG_RUNTIME_DIR/sandbar"
[ -e "$FIFO" ] || mkfifo "$FIFO"
sec=0

while true; do
  sleep 1 &
  wait && {
    [ $((sec % 15)) -eq 0 ] && memory
    [ $((sec % 15)) -eq 0 ] && cpu
    [ $((sec % 15)) -eq 0 ] && disk
    [ $((sec % 60)) -eq 0 ] && bat
    [ $((sec % 5)) -eq 0 ] && vol
    [ $((sec % 5)) -eq 0 ] && datetime
    [ $((sec % 5)) -eq 0 ] && vpn
    [ $((sec % 5)) -eq 0 ] && display
    sec=$((sec + 1))
  }
done

cpu() {
  cpu="$(grep -o "^[^ ]*" /proc/loadavg)"
}

memory() {
  memory="$(free -h | sed -n "2s/\([^ ]* *\)\{2\}\([^ ]*\).*/\2/p")"
}

disk() {
  disk="$(df -h / | awk 'NR==2{print $4}')"
}

datetime() {
  current_date=$(date "+%m/%d/%Y")
  local_time=$(date "+%I:%M%p")
  # edt_time=$(TZ="America/New_York" date "+%I:%M%p")
  # cdt_time=$(TZ="America/Chicago" date "+%I:%M%p")
  # cest_time=$(TZ="Europe/Berlin" date "+%I:%M%p")
  #
  # datetime="$current_date $local_time EST $edt_time CDT $cdt_time CEST $cest_time"
  datetime="$current_date $local_time"
}

bat() {
  [ ! -d /sys/class/power_supply/BAT0 ] && bat="N/A" && return

  read -r bat_status </sys/class/power_supply/BAT0/status
  read -r bat_capacity </sys/class/power_supply/BAT0/capacity

  case "$bat_status" in
    "Charging")    symbol="+" ;;
    "Discharging") symbol="-" ;;
    *)             symbol="=" ;;
  esac

  bat="$symbol $bat_capacity%"
}

vol() {
  vol="$([ "$(pamixer --get-mute)" = "false" ] && printf "%s%%" "$(pamixer --get-volume)" || printf 'Muted')"
}

vpn() {
  if ip link show tun0 2>/dev/null | grep -q "state UP"; then
    vpn=" VPN"
  elif ip link show wg0 2>/dev/null | grep -q "state UP"; then
    vpn=" VPN"
  elif ip link show redhat0 2>/dev/null | grep -q "state UNKNOWN"; then
    vpn=" VPN"
  else
    vpn=""
  fi
}

display() {
  echo "[ $memory] [ $cpu] [ $disk] [ $vol] [ $datetime] [ $bat]${vpn:+ [$vpn]}" >"$FIFO"
}

printf "%s" "$$" >"$XDG_RUNTIME_DIR/status_pid"
FIFO="$XDG_RUNTIME_DIR/sandbar"
[ -e "$FIFO" ] || mkfifo "$FIFO"
sec=0

while true; do
  sleep 1 &
  wait && {
    [ $((sec % 15)) -eq 0 ] && memory
    [ $((sec % 15)) -eq 0 ] && cpu
    [ $((sec % 15)) -eq 0 ] && disk
    [ $((sec % 60)) -eq 0 ] && bat
    [ $((sec % 5)) -eq 0 ] && vol
    [ $((sec % 5)) -eq 0 ] && datetime
    [ $((sec % 5)) -eq 0 ] && vpn
    [ $((sec % 5)) -eq 0 ] && display
    sec=$((sec + 1))
  }
done

