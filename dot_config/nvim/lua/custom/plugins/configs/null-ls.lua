local present, null_ls = pcall(require, "null-ls")

if not present then
  return
end

local b = null_ls.builtins

local sources = {
  -- code actions
  b.code_actions.cspell,
  b.code_actions.eslint_d,
  b.code_actions.gitrebase,
  b.code_actions.gitsigns,
  b.code_actions.gomodifytags,
  b.code_actions.ltrs,
  -- b.code_actions.proselint,
  b.code_actions.shellcheck, -- b.code_actions.,
  -- completion
  b.completion.luasnip,
  -- b.completion.spell,
  b.completion.tags,
  -- b.completion.,

  -- diagnostics
  b.diagnostics.actionlint,
  -- b.diagnostics.alex,
  b.diagnostics.buildifier,
  b.diagnostics.checkmake,
  -- b.diagnostics.checkstyle,
  -- b.diagnostics.clang_check,
  b.diagnostics.cmake_lint,
  -- b.diagnostics.codespell,
  b.diagnostics.commitlint,
  -- b.diagnostics.cppcheck,
  -- b.diagnostics.cpplint,
  -- b.diagnostics.cspell,
  -- b.diagnostics.eslint_d,
  -- b.diagnostics.prettier_d_slim,
  b.diagnostics.fish,
  -- b.diagnostics.flake8, 
  -- b.diagnostics.gccdiag,
  b.diagnostics.gitlint,
  b.diagnostics.golangci_lint,
  b.diagnostics.hadolint,
  b.diagnostics.jsonlint,
  -- b.diagnostics.ltrs, 
  -- b.diagnostics.luacheck,
  --b.diagnostics.markdownlint, -- b.diagnostics.mypy,
  -- b.diagnostics.pycodestyle,
  -- b.diagnostics.pydocstyle,
  -- b.diagnostics.pylama,
  -- b.diagnostics.pylint,
  -- b.diagnostics.revive,
  -- b.diagnostics.ruff,
  -- b.diagnostics.selene,
  b.diagnostics.shellcheck,
  b.diagnostics.sqlfluff,
  b.diagnostics.staticcheck,
  -- b.diagnostics.stylelint,
  -- b.diagnostics.textlint,
  -- b.diagnostics.tidy,
  b.diagnostics.todo_comments,
  b.diagnostics.trail_space,
  b.diagnostics.tsc,
  b.diagnostics.vint,
  -- b.diagnostics.vulture,
  b.diagnostics.yamllint,
  b.diagnostics.zsh,
  -- b.diagnostics.,
  -- o
  -- formatting
  b.formatting.asmfmt,
  b.formatting.astyle,
  -- b.formatting.autoflake,
  -- b.formatting.autopep8,
  b.formatting.beautysh,
  b.formatting.bibclean,
  -- b.formatting.black,
  b.formatting.brittany,
  b.formatting.buildifier,
  b.formatting.cabal_fmt,
  -- b.formatting.cbfmt,
  b.formatting.clang_format,
  b.formatting.cmake_format,
  -- b.formatting.codespell,
  b.formatting.dart_format,
  b.formatting.deno_fmt,
  b.formatting.eslint_d,
  -- b.formatting.fixjson,
  b.formatting.gofumpt,
  b.formatting.goimports,
  b.formatting.goimports_reviser,
  b.formatting.golines,
  b.formatting.google_java_format,
  -- b.formatting.isort,
  b.formatting.jq,
  b.formatting.json_tool,
  b.formatting.latexindent,
  b.formatting.lua_format,
  b.formatting.markdownlint,
  b.formatting.markdown_toc,
  b.formatting.mdformat,
  b.formatting.prettier_d_slim, 
  -- b.formatting.prettier_eslint,
  -- b.formatting.reorder_python_imports,
  b.formatting.ruff,
  b.formatting.rustfmt,
  b.formatting.shellharden,
  b.formatting.shfmt,
  b.formatting.sqlfluff,
  b.formatting.sqlformat,
  b.formatting.sql_formatter,
  b.formatting.stylish_haskell,
  b.formatting.taplo, 
  -- b.formatting.textlint,
  b.formatting.tidy,
  b.formatting.trim_newlines,
  b.formatting.trim_whitespace,
  b.formatting.uncrustify,
  b.formatting.yamlfmt,
  b.formatting.yapf,
  b.formatting.stylua,
  -- b.formatting.,
  -- hover
  b.hover.dictionary,
  b.hover.printenv,
  -- b.hover.,
}

null_ls.setup {
  debug = true,
  sources = sources,
  -- on_init = function(new_client, _)
  --   new_client.offset_encoding = "utf-16"
  -- end,
}
